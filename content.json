{"meta":{"title":"Chanhy's Blog","subtitle":"记录生活，记录学习，分享知识","description":"陈华阳个人博客，记录生活，记录学习，分享知识","author":"Chanhy","url":"https://www.chyds.cn"},"pages":[{"title":"分类","date":"2018-03-23T02:40:11.000Z","updated":"2018-03-25T04:53:16.541Z","comments":false,"path":"categories/index.html","permalink":"https://www.chyds.cn/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-03-23T02:36:13.000Z","updated":"2018-03-25T04:53:04.556Z","comments":false,"path":"tags/index.html","permalink":"https://www.chyds.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"第一节：JS的介绍，变量，数据类型，运算符","slug":"第一节：JS的介绍，变量，数据类型，运算符","date":"2019-01-27T12:50:16.000Z","updated":"2019-01-27T14:23:41.557Z","comments":true,"path":"2019/01/27/第一节：JS的介绍，变量，数据类型，运算符/","link":"","permalink":"https://www.chyds.cn/2019/01/27/第一节：JS的介绍，变量，数据类型，运算符/","excerpt":"","text":"JavaScript的介绍JavaScript是什么？ 是一门脚本语言：不需要编译，直接运行 是一门解释性的语言：遇到一行代码就执行一行代码 是一门动态类型的语言 是一门基于对象的语言 是一门弱类型的语言：声明变量的时候使用var JS分为三个部分 ECMAScript标准：js的基本语法 DOM BOM JS用了将近10天来发明的变量变量的作用操作数据，读取数据 变量的声明var 变量名字; var num; 变量的初始化var 变量名字=值;—字面量的方式赋值 var str=”这是一个字符串”; 注意事项 js中大小写是区分的 js中的字符串可以使用单引号，也可以使用双引号 js中每行代码结束都要有分号 ; 数据类型js中的原始数据类型 number 数字类型 string 字符串类型 boolean 布尔类型 undefined 未定义 null 空 object 对象 null和undefined数据是没有太大意义的，null是很有意义的—对象的时候解释 NaN——不是一个数字，不是一个数字和一个数字计算——结果就是NaN isNaN()——判断这个变量或者这个值是不是“不是一个数字”——如果不是一个数字结果就是true，如果是一个数字结果就是false number数据类型无论是整数还是小数都是number数据类型的 string数据类型字符串 获取字符串的长度 变量名.length null数据类型只有一个值，null undefined数据类型只有一个，undefined，一个变量声明了，没有赋值 object数据类型对象 类型转换其他类型转数字转整数 parseInt() 转小数 parseFloat() 转数字类型——比上面两个严格 Number() 其他类型转字符串 .toString() String() 其他类型转布尔类型要么是true要么是false Boolean() 运算符——操作符算术运算符 + - * / % 复合运算符 += -= *= /= %= 赋值运算符 = 优先级是最低的 一元运算符 ++ -- 如果++在后面：如num++ +10参与运算 先参与运算，运算结束后自身加1 如果++在前面：如++num+10参与运算 先自身加1，然后再参与运算 三元运算符 ? : 关系运算符关系运算符的结果是布尔类型 > \\&lt; >= \\&lt;= == === != !== 逻辑运算符逻辑运算符的结果是布尔类型 &amp;&amp; || ! 如果有一个为false，整个结果就是false 表达式1&amp;&amp;表达式2 只有一个为ture，整个结果就是true 表达式1||表达式2 结果就是取反 !表达式","categories":[{"name":"JavaScript基础","slug":"JavaScript基础","permalink":"https://www.chyds.cn/categories/JavaScript基础/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://www.chyds.cn/tags/前端/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://www.chyds.cn/tags/JavaScript/"},{"name":"学习","slug":"学习","permalink":"https://www.chyds.cn/tags/学习/"}]},{"title":"使用Hexo+Github搭建博客","slug":"Hexo-Github-Start-a-Blog","date":"2018-09-16T00:28:55.000Z","updated":"2019-01-26T09:00:11.568Z","comments":true,"path":"2018/09/16/Hexo-Github-Start-a-Blog/","link":"","permalink":"https://www.chyds.cn/2018/09/16/Hexo-Github-Start-a-Blog/","excerpt":"","text":"前言大概分为以下几个步骤 安装node.js 安装Git 安装Hexo 本地运行Hexo 托管到Github 安装node.jsHexo是基于nodeJS环境的静态博客 飞机直达 根据自己的Windows版本选择相应的安装版本 node.js 保持默认，一路Next，直到安装完成 检查node环境是否正常快捷键Win+R，打开运行窗口 运行窗口 在运行窗口中输入cmd，回车，打开命令行界面在命令行中输入 node -vnpm -v 命令行 如图所示显示版本号，则安装正常 安装Git环境下载安装Git 飞机直达 下载完成后打开安装包 Git 大部分安装默认设置，只有下图需要选择第二项 Git 检查Git环境是否正常安装完成后打开命令行，输入： git –version 命令行 如图所示显示版本号，则安装正常 安装Hexo使用npm安装Hexo打开命令行 npm install -g hexo-cli 等待安装完成 命令行 检查安装状态 hexo -v 如果你看到了如图文字，则说明已经安装成功了。 体验hexo初始化hexo新建一个文件夹，用来存放博客的文件 打开命令行cd到新建的目录 输入初始化命令 hexo init 完成之后可以看到文件夹下多了这些文件 node_modules：是依赖包 public：存放的是生成的页面 scaffolds：命令生成文章等的模板 source：用命令创建的各种文章 themes：主题 _config.yml：整个博客的配置 db.json：source解析所得到的 package.json：项目所需模块项目的配置信息 本地运行hexo打开命令行cd到博客的目录 输入命令生成页面 hexo g //generetor的缩写 输入命令启动本地服务 hexo s //server的缩写 启动成功，浏览器输入地址访问 http://localhost:4000/ 如果看到这个样子，恭喜你已经成功在本地运行博客了 托管到GitHub注册GitHub如果已经有账号了可以跳过此步 打开GitHub 飞机直达 填写用户名，邮箱，密码 Github会发送一封注册确认的邮件，收到邮件后确认注册 创建仓库登录GitHub点击头像旁边的+号图标 选择第一项 new erpository 仓库名称填写格式，因为我创建过了所以提示已存在 用户名.github.io 填写完后点击Create repository 创建仓库 创建完成后点击Settings 设置 页面向下拉，直到看见GitHub Pages 点击 launch automatic page generator 之后会跳转一个页面 点击 continue to layouts 跳转后点击Publish page 发布页面 发布完成后就可以在浏览器输入 用户名.github.io 访问了 配置git个人信息如果你已经配置过个人信息请跳过这个步骤 设置git的user name和email 在博客文件夹目录右键–Git Base Here git config –global user.name “用户名”git config –global user.email “邮箱” 生成密钥 输入命令，连续三个回车，会生成两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\\Users\\Administrator\\.ssh） ssh-keygen -t rsa -C “邮箱” 打开GitHub进入设置 点击SSH and GPG keys进入SSH配置页，再点击New SSH key添加新的密钥 Title填写一个名称（一般用来区分不同的主机），用文本工具打开id_rsa.pub复制到key里 点击Add SSH key输入密码保存 托管代码把代码托管到GitHub之前先配置hexo的上传信息 打开博客文件夹找到_config.yml文件并打开找到Deployment，然后按照如下修改： deploy: type: git repository: github: git@github.com:用户名/用户名.github.io.git branch: master 在博客目录右键—&gt;Git Bash Here 输入命令生成静态页面 hexo d 输入命令上传代码 hexo d 再次访问你的网站，这个地址就是你博客的地址，我们的博客已经搭建完成了！ 用户名.github.io 常用指令 hexo c //清除缓存文件 db.json 和已生成的静态文件 public hexo g //生成网站静态文件到默认设置的 public 文件夹 hexo s //启动本地服务器，默认地址： http://localhost:4000 hexo d //部署到设定的仓库 每次更新博客先生成静态页面再上传","categories":[{"name":"教程","slug":"教程","permalink":"https://www.chyds.cn/categories/教程/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.chyds.cn/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://www.chyds.cn/tags/Github/"},{"name":"教程","slug":"教程","permalink":"https://www.chyds.cn/tags/教程/"},{"name":"博客","slug":"博客","permalink":"https://www.chyds.cn/tags/博客/"}]},{"title":"Sublime Text3 安装以及汉化等常用插件","slug":"sublime-text3-install","date":"2018-04-10T15:43:42.000Z","updated":"2019-01-26T15:01:58.410Z","comments":true,"path":"2018/04/10/sublime-text3-install/","link":"","permalink":"https://www.chyds.cn/2018/04/10/sublime-text3-install/","excerpt":"","text":"下载Sublime Text3到官网下载Sublime Text3 安装包 链接附上：https://www.sublimetext.com/3 按照你的系统下载向对应的安装包 安装Sublime Text3打开下载好的安装包 可以按照默认一路安装下去，也可以修改安装位置，自己决定 安装Package Control插件管理器以及汉化插件Sublime刚安装好后是英文的，要安装一个插件管理器和汉化插件 安装Package Control插件管理器 Package Control是Sulime的插件管理器，可以添加、删除、查询插件等 1、打开 https://packagecontrol.io/installation 2、复制Sublime Text3的代码 3、打开Sublime快捷键CTRL+`，打开控制台 4、把刚刚复制的代码粘贴到控制台然后回车安装 安装汉化插件1、打开Sublime 选择Preferences &gt; Package Control 或者使用快捷键 Ctrl+Shift+p 2、输入install 选择 Package Control: install Package 回车确认选择 3、输入ChineseLocalizations 汉化插件名称，回车确认安装 常用插件推荐 插件的安装方法参照上面的安装汉化插件 A File Icon功能：侧边栏文件图标 All Autocomplete功能：搜索所有打开的文件来寻找匹配的提示词 AutoFileName功能：文件路径补全 Boxy Theme功能：主题 使用：首选项 &gt; 主题 ColorHighlighter功能：颜色代码选中高亮 DocBlockr功能：注释 Emmet功能：代码快捷键 使用方法：https://docs.emmet.io/cheat-sheet/ LESS功能：代码高亮 Less2css功能：Less编译 less2css依赖lessc这个工具 飞机直达 把目录地址加入到环境变量PATH的中，如D:\\less.js-windows-master SideBarEnhancements功能：增强侧边栏 Sublimerge功能：文件对比 TortoiseSVN功能：在sublime中进行svn相关操作 Setting-User配置 12345678&#123; // Auto close update dialog when no errors, conflicts and merges &quot;autoCloseUpdateDialog&quot;: false, // Auto close commit dialog when no errors, conflicts and merges &quot;autoCloseCommitDialog&quot;: true, &quot;tortoiseproc_path&quot;: &quot;D:\\Tool\\TortoiseSVN\\bin\\TortoiseProc.exe&quot; &#125; D:\\Tool\\TortoiseSVN\\bin\\TortoiseProc.exe 表示的是SVN客户端的安装路径，此路径请自行修改 View in Browser功能：在浏览器中打开 cssrem功能：px转rem Setting-User配置 12345&#123; &quot;px_to_rem&quot;:20, // px转rem的单位比例 &quot;max_rem_fraction_length&quot;:6, // px转rem的小数部分的最大长度 &quot;available_file_types&quot;:[&quot;.html&quot;,&quot;.css&quot;,&quot;.less&quot;,&quot;.sass&quot;], // 启用此插件的文件类型&#125; HTML-CSS-JS Prettify功能：格式化代码 依赖node.js Plugin Options - Default配置 123456&quot;node_path&quot;: &#123; &quot;windows&quot;: &quot;C:/Program Files/nodejs/node.exe&quot;, // node.js的安装目录 &quot;linux&quot;: &quot;/usr/bin/nodejs&quot;, &quot;osx&quot;: &quot;/usr/local/bin/node&quot; &#125;, liveReload功能：浏览器自动刷新 需要在浏览器安装相应的插件 SublimeCodeIntel功能：多语言代码智能提示 ColorPicker功能：调色板 使用：快捷键 Ctrl+Shift+C","categories":[{"name":"教程","slug":"教程","permalink":"https://www.chyds.cn/categories/教程/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://www.chyds.cn/tags/教程/"},{"name":"Sublime Text3","slug":"Sublime-Text3","permalink":"https://www.chyds.cn/tags/Sublime-Text3/"},{"name":"前端","slug":"前端","permalink":"https://www.chyds.cn/tags/前端/"}]}]}